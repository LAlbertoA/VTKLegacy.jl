var documenterSearchIndex = {"docs":
[{"location":"#VTKLegacy.jl-Documentation","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.jl Documentation","text":"","category":"section"},{"location":"","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.jl Documentation","text":"Mesh\nLoadVTK\nintegrate(m::Mesh,var::Union{Int64,String,Vector{Union{Int64,String}}}=1)\nranges\nmagnitude\nprobe","category":"page"},{"location":"#VTKLegacy.Mesh","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.Mesh","text":"Mesh\n\nObject that contains all the information and datasets from a Legacy VTK file that has been read.\n\nFields\n\ndata::Array{Float64,4}: 4-dimensional array of Float64 that holds the datasets of the vtk file.\nnx::Int32: Number of cells in the x direction.\nny::Int32: Number of cells in the y direction.\nnz::Int32: Number of cells in the z direction.\ndx::Float64: Cell size in the x direction.\ndy::Float64: Cell size in the y direction.\ndz::Float64: Cell size in the z direction.\nx0::Float64: Position of origin in the x direction.\ny0::Float64: Position of origin in the y direction.\nz0::Float64: Position of origin in the z direction.\nx::Vector{Float64}: Cell positions in the x direction.\ny::Vector{Float64}: Cell positions in the y direction.\nz::Vector{Float64}: Cell positions in the z direction.\ndimensions::Vector{Int64}: Number of cells in each dimension: [nx,ny,nz].\nspacing::Vector{Float64}: Cell size in each dimension: [dx,dy,dz].\norigin::Vector{Float64}: Origin of the mesh: [x0,y0,z0].\ndatanames::Vector{String}: Names of the datasets in the VTK file.\ndataattribute::Vector{String}: Attribute of each dataset in the VTK file.\ndictionary::Dict{String,Union{Int64,UnitRange{Int64}}}: Dictionary with the datanames as the keys and the indexes of data as the values. \n\n\n\n\n\n","category":"type"},{"location":"#VTKLegacy.LoadVTK","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.LoadVTK","text":"LoadVTK(filename::String)\n\nRead the VTK file filename in to an object of type Mesh. Currently only StructuredPoints are supported.\n\n\n\n\n\n","category":"function"},{"location":"#VTKLegacy.integrate","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.integrate","text":"integrate(m::Mesh,var::Union{Int64,String,Vector{Union{Int64,String}}}=1)\n\nCompute the discrete integral of var in the whole mesh m as: \n\nI = sum_(ijk)=(111)^N_xN_yN_ztextvar_(ijk)Delta xDelta yDelta z\n\nIf var is unspecified, integrate only the dataset with index 1 in m.data\n\n\n\n\n\n","category":"function"},{"location":"#VTKLegacy.ranges","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.ranges","text":"ranges(m::Mesh,io::Union{IOStream,Nothing}=nothing)\n\nObtain the maximum and minimum values of each dataset in m and print them to io followed by a newline.\n\nIf io is unspecified, prints the values to the default output stream stdout.\n\n\n\n\n\n","category":"function"},{"location":"#VTKLegacy.magnitude","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.magnitude","text":"magnitude(m::Mesh,dataname::String)\n\nCompute the magnitude of a dataset in m with name dataname and attribute Vector.\n\n\n\n\n\n","category":"function"},{"location":"#VTKLegacy.probe","page":"VTKLegacy.jl Documentation","title":"VTKLegacy.probe","text":"probe(filename::String, fig = Figure())\n\nGenerate heatmaps of each dataset in the VTK file filename at nz/2. If there are Vector datasets, plot the magnitude of the Vector array.\n\n\n\n\n\n","category":"function"}]
}
